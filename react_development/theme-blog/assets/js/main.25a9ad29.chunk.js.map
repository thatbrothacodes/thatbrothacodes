{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","flex","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","zIndex","drawer","top","boxShadow","height","backgroundColor","color","appBarShift","easeOut","enteringScreen","flexShrink","drawerPaper","width","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","marginTop","flexGrow","hide","title","contentShift","marginRight","withWidth","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","Typography","variant","noWrap","IconButton","aria-label","edge","onClick","Drawer","anchor","paper","direction","style","Container","maxWidth","Grid","container","Hidden","mdDown","item","lg","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25a9ad29.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport './App.css';\nimport { createStyles, useTheme, Theme, makeStyles } from '@material-ui/core/styles';\nimport withWidth from '@material-ui/core/withWidth';\nimport AppBar from '@material-ui/core/AppBar';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst drawerWidth = '98%';\nconst topPosition = 80;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flex: '1 0 auto'\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      zIndex: theme.zIndex.drawer + 1,\n      top: topPosition,\n      boxShadow: '0 6px 8px 0 rgba(0, 0, 0, 0.5), 0 2px 15px 0 rgba(0, 0, 0, 0.1)',\n      height: '59px',\n      backgroundColor: '#fcb60c',\n      color: '#000000'\n    },\n    appBarShift: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawer: {\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      top: topPosition,\n      color: '#ffffff',\n      backgroundColor: '#000000'\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-start',\n    },\n    content: {\n      marginTop: '80px',\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    hide: {\n      display: 'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginRight: 0,\n    }\n  }),\n);\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <header>\n        <div>\n            \n        </div>\n      </header>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}>\n          <Toolbar>\n            <Typography variant=\"h6\" noWrap className={classes.title}>\n              Clipped drawer\n            </Typography>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"end\"\n              onClick={handleDrawerOpen}\n              className={clsx(open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"right\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <Toolbar />\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={handleDrawerClose}>\n                {theme.direction === 'rtl' ? <ChevronLeftIcon style={{ color: '#ffffff' }} /> : <ChevronRightIcon  style={{ color: '#ffffff' }}/>}\n              </IconButton>\n            </div>\n            {/* \n              TBC Author Widget\n            */}\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <Container maxWidth=\"lg\">\n            <Grid container spacing={3}>\n              <Hidden mdDown>\n                <Grid item lg={3}>\n                  {/* \n                    TBC Author Widget\n                  */}\n                </Grid>\n              </Hidden>\n              <Grid item md={12} lg={9}>\n                <Toolbar />\n                \n              </Grid>\n            </Grid>\n          </Container>\n        </main>\n      </div>\n      <footer>\n        <div>\n            \n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default withWidth()(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}